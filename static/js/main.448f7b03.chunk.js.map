{"version":3,"sources":["components/GithubFilePicker.tsx","images/Completed.png","images/ImportCrew.png","images/Loading.png","images/Middenheim.png","images/Nurgle.png","images/Orcs.png","images/Sigmar.png","utilities/InfoUtils.ts","utilities/Interfaces.ts","utilities/RosterUtils.ts","components/RulesSection.tsx","components/StatsAndEquipmentSection.tsx","components/UnitHeader.tsx","components/WarbandHeader.tsx","components/PdfInfoPage.tsx","components/PdfRoster.tsx","index.tsx","pages/PdfCreationPage.tsx","pages/LandingPage.tsx"],"names":["GithubFilePicker","useState","githubRepo","githubUser","currentContentUrl","setCurrentContentUrl","currentContent","setCurrentContent","selectedFile","setSelectedFile","history","useHistory","useEffect","getUsers","fetchData","fetch","response","json","jsonResponse","getYamlDataAndJump","text","txtResponse","push","yaml","Fragment","className","style","float","marginTop","filteredContent","length","filter","content","type","name","indexOf","undefined","width","textAlign","map","onClick","url","download_url","getFoldersAndYmls","AllSkills","Skills","AllSpells","Spells","AllEquipment","Equipment","AllArmour","eq","Armour","AllMeleeWeapons","MeleeWeapons","AllMissileWeapons","MissileWeapons","AllMiscallaneous","Miscallaneous","findSkills","units","unitsWithRules","unit","rules","skills","Set","reduce","acc","regex","RegExp","unitRules","split","rule","trim","foundSkill","find","skill","classStart","lastIndexOf","classEnd","mappedSpells","substring","entry","accum","element","currentSpell","spellReduction","parseInt","foundSpell","spell","modifiedSpell","castingCost","toString","console","log","getEquipmentRules","ruleString","EquipmentRules","isHero","hero","isSpell","skillOrSpell","extractExperience","nameAndXp","bracketStart","bracketEnd","getNextLevelUp","currentXp","extractName","group","extractClass","extractHenchmenBodies","henchmen","numberEnd","isNaN","charAt","getRoutLimit","heroes","Math","ceil","prev","curr","getWarbandSize","getWatermark","warbandName","OnGPng","SigmarPng","NurglePng","MiddenheimPng","RulesSection","Unit","display","flexDirection","StatsAndEquipmentSection","statLine","statString","statArr","subString","replace","M","WS","BS","S","T","W","I","A","LD","Sv","getStatLine","stats","WeaponsPart","weapons","ArmourPart","armour","borderTop","Object","entries","key","value","UnitHeader","WarbandHeader","warband","justifyContent","fontSize","heros","henchmanGroup","isLargeHenchman","gc","shards","PdfInfoPage","state","spells","entity","equipment","unitsWithEquipment","uniqueEquipment","unitWeapons","unitArmour","weapon","foundArmour","equi","foundEquipment","melee","missile","misc","findEquipment","id","top","src","minHeight","notes","NotesSection","note","SkillsSection","SpellsSection","EquipmentSection","armourType","isArmour","strengthModifier","isMelee","genus","isMisc","range","isMissile","strength","PdfRoster","marginLeft","ReactDOM","StrictMode","path","component","location","exportPdf","jsPdf","jsPDF","html2canvas","document","querySelector","scale","canvas","addImage","toDataURL","internal","pageSize","getWidth","getHeight","addPage","save","showSuccess","setSuccess","CompletedPng","alt","goBack","LoadingPng","htmlFor","accept","onChange","reader","FileReader","onload","ev","jsobject","target","result","readAsText","files","item","maxWidth","ImportWarbandPng","padding","fontWeight","borderBottom","getElementById","click"],"mappings":"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","file":"static/js/main.448f7b03.chunk.js","sourcesContent":["import * as yaml from \"js-yaml\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\ninterface GithubContent {\r\n    name: string;\r\n    type: string;\r\n    url: string;\r\n    download_url: string;\r\n}\r\nexport const GithubFilePicker = () => {\r\n    const [githubRepo, setGithubRepo] = useState(\"Mordheim\");\r\n    const [githubUser, setGithubUser] = useState(\"Labernator\");\r\n    const [currentContentUrl, setCurrentContentUrl] = useState(\"\");\r\n    const [currentContent, setCurrentContent] = useState<GithubContent[]>([]);\r\n    const [selectedFile, setSelectedFile] = useState<string>();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        const getUsers = async () => fetchData();\r\n        // tslint:disable-next-line: no-floating-promises\r\n        getUsers();\r\n        return () => {\r\n            // this now gets called when the component unmounts\r\n        };\r\n    }, [currentContentUrl]);\r\n    const fetchData = async () => {\r\n        // tslint:disable-next-line: strict-string-expressions\r\n        const response = await fetch(currentContentUrl || `https://api.github.com/repos/${githubUser}/${githubRepo}/contents`);\r\n        const jsonResponse = await response.json();\r\n        setCurrentContent(jsonResponse);\r\n    };\r\n    const getYamlDataAndJump = async () => {\r\n        if (!selectedFile) {\r\n            return;\r\n        }\r\n        const response = await fetch(selectedFile);\r\n        const txtResponse = await response.text();\r\n        // const jsonResponse = yaml.load(response as unknown as string);\r\n        history.push(\"/PdfExport\", yaml.load(txtResponse));\r\n    };\r\n    const getFoldersAndYmls = () => {\r\n        const filteredContent = currentContent.length && currentContent.length > 0 ? currentContent.filter((content) => content.type === \"dir\" || (content.type === \"file\" && content.name.indexOf(\".yml\") !== -1)) : undefined;\r\n        return <table className=\"storage-table\" style={{ width: \"calc(100% - 1.5rem)\", textAlign: \"left\" }}>\r\n            <thead>\r\n                <tr><td>Folder/File</td><td>Type</td></tr>\r\n            </thead>\r\n            <tbody>\r\n                {filteredContent ? filteredContent.map((content) => content.type === \"dir\" ?\r\n                    <tr onClick={() => setCurrentContentUrl(content.url)}><td>{content.name}</td><td>Dir</td></tr> :\r\n                    <tr onClick={() => setSelectedFile(content.download_url)} className={content.download_url === selectedFile ? \"selected\" : \"\"}><td>{content.name}</td><td>File</td></tr>\r\n                ) : undefined}\r\n            </tbody>\r\n        </table>;\r\n    };\r\n    return <React.Fragment><div>\r\n        <div className=\"bold-text-with-margins\" style={{ float: \"left\" }}>Or select a yml file from a Github repo</div>\r\n        <div className=\"bold-text-with-margins\" style={{ float: \"left\" }}>Github Repository: </div>\r\n        <div className=\"text-with-margins\" style={{ float: \"left\" }}>{githubUser}/{githubRepo}</div>\r\n    </div>\r\n        <div>\r\n            <div className=\"bold-text-with-margins\" style={{ marginTop: \"1rem\" }}>Repository content (tap to navigate)</div>\r\n            {getFoldersAndYmls()}\r\n            <div className={selectedFile ? \"enabled\" : \"disabled\"} onClick={getYamlDataAndJump}>Generate Pdf from Selection</div>\r\n\r\n        </div>\r\n    </React.Fragment>;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Completed.7ca392ee.png\";","export default __webpack_public_path__ + \"static/media/ImportCrew.e5abae4c.png\";","export default __webpack_public_path__ + \"static/media/Loading.382232d0.png\";","export default __webpack_public_path__ + \"static/media/Middenheim.f6075d09.png\";","export default __webpack_public_path__ + \"static/media/Nurgle.035dd089.png\";","export default __webpack_public_path__ + \"static/media/Orcs.aba56332.png\";","export default __webpack_public_path__ + \"static/media/Sigmar.35f347f6.png\";","import * as Equipment from \"../data/Equipment.json\";\r\nimport * as EquipmentRules from \"../data/EquipmentRules.json\";\r\nimport * as Skills from \"../data/Skills.json\";\r\nimport * as Spells from \"../data/Spells.json\";\r\nimport { ArmourEntity, EquipmentEntity, EquipmentRulesEntity, HenchmenEntity, HerosEntity, MeleeWeaponsEntity, MiscallaneousEntity, MissileWeaponsEntity, SkillsEntity, SpellsEntity } from \"./Interfaces\";\r\n\r\nconst AllSkills = Skills.Skills as SkillsEntity[];\r\nconst AllSpells = Spells.Spells as SpellsEntity[];\r\nconst AllEquipment = Equipment.equipment as EquipmentEntity[];\r\nconst AllArmour = AllEquipment.filter((eq) => eq.Armour)[0].Armour as ArmourEntity[];\r\nconst AllMeleeWeapons = AllEquipment.filter((eq) => eq.MeleeWeapons)[0].MeleeWeapons as MeleeWeaponsEntity[];\r\nconst AllMissileWeapons = AllEquipment.filter((eq) => eq.MissileWeapons)[0].MissileWeapons as MissileWeaponsEntity[];\r\nconst AllMiscallaneous = AllEquipment.filter((eq) => eq.Miscallaneous)[0].Miscallaneous as MiscallaneousEntity[];\r\n\r\nexport const findSkills = (units: Array<HerosEntity | HenchmenEntity>): Array<SpellsEntity | SkillsEntity | undefined> => {\r\n    const unitsWithRules = units.filter((unit) => unit.rules);\r\n    const uniqueRules = [...new Set(unitsWithRules.reduce((acc, unit) => {\r\n        if (unit.rules) {\r\n            const regex = new RegExp(/(?<!\\(),(?![\\w\\s]*[)])/);\r\n            const unitRules = unit.rules.split(regex).map((rule) => rule.trim());\r\n            return [...acc, ...unitRules];\r\n        }\r\n        return acc;\r\n    }, [] as string[]))];\r\n    // tslint:disable: no-console\r\n    const skills = uniqueRules.reduce((acc, rule) => {\r\n        const foundSkill = AllSkills.find((skill) => skill.name === rule);\r\n        if (foundSkill) {\r\n            return [...acc, foundSkill];\r\n        }\r\n        if (rule.indexOf(\"Wizard\") !== -1 || rule.indexOf(\"Priest\") !== -1) {\r\n            const classStart = rule.lastIndexOf(\"(\");\r\n            const classEnd = rule.lastIndexOf(\")\");\r\n            const spellName = rule.substring(classStart + 1, classEnd);\r\n            const allSpells = spellName.split(\",\").map((entry) => entry.trim());\r\n            const mappedSpells = allSpells.reduce((accum, element) => {\r\n                let currentSpell = element;\r\n                let spellReduction = 0;\r\n                if (currentSpell.lastIndexOf(\"[\")) {\r\n                    spellReduction = parseInt(currentSpell.substring(currentSpell.lastIndexOf(\"[\") + 1, currentSpell.lastIndexOf(\"]\")), 10);\r\n                    currentSpell = currentSpell.substring(0, currentSpell.lastIndexOf(\"[\")).trim();\r\n                }\r\n                const foundSpell = AllSpells.find((spell) => spell.name === currentSpell);\r\n                if (foundSpell) {\r\n                    const modifiedSpell = {\r\n                        ...foundSpell,\r\n                        castingCost: spellReduction ? `${(parseInt(foundSpell.castingCost, 10) + spellReduction).toString()}+` : foundSpell.castingCost,\r\n                    };\r\n                    return [...accum, modifiedSpell];\r\n                }\r\n                return accum;\r\n            }, [] as SpellsEntity[]);\r\n            return [...acc, ...mappedSpells];\r\n        }\r\n        if (rule.indexOf(\"Hatred\") !== -1) {\r\n            return [...acc, AllSkills.find((skill) => skill.name === \"Hatred\") as SkillsEntity];\r\n        }\r\n        return acc;\r\n    }, [] as Array<SpellsEntity | SkillsEntity>);\r\n    console.log(skills);\r\n    return skills;\r\n};\r\n\r\nexport const findEquipment = (units: Array<HerosEntity | HenchmenEntity>): Array<MeleeWeaponsEntity | MissileWeaponsEntity | ArmourEntity | MiscallaneousEntity> => {\r\n    const unitsWithEquipment = units.filter((unit) => unit.weapons || unit.armour);\r\n    const uniqueEquipment = [...new Set(unitsWithEquipment.reduce((acc, unit) => {\r\n        let unitWeapons: string[] = [];\r\n        let unitArmour: string[] = [];\r\n        if (unit.weapons) {\r\n            unitWeapons = unit.weapons.split(\",\").map((weapon) => weapon.trim());\r\n        }\r\n        if (unit.armour) {\r\n            unitArmour = unit.armour.split(\",\").map((armour) => armour.trim());\r\n        }\r\n        return [...acc, ...unitWeapons, ...unitArmour];\r\n    }, [] as string[]))];\r\n    const foundArmour = uniqueEquipment.map((equi) => {\r\n        const foundEquipment = AllArmour.find((equipment) => equipment.type === equi.trim());\r\n        if (foundEquipment) {\r\n            return foundEquipment;\r\n        }\r\n        return undefined;\r\n    }).filter((equi) => equi) as ArmourEntity[];\r\n    const melee = uniqueEquipment.map((equi) => {\r\n        const foundEquipment = AllMeleeWeapons.find((equipment) => equipment.type === equi.trim());\r\n        if (foundEquipment) {\r\n            return foundEquipment;\r\n        }\r\n        return undefined;\r\n    }).filter((equi) => equi) as MeleeWeaponsEntity[];\r\n    const missile = uniqueEquipment.map((equi) => {\r\n        const foundEquipment = AllMissileWeapons.find((equipment) => equipment.type === equi.trim());\r\n        if (foundEquipment) {\r\n            return foundEquipment;\r\n        }\r\n        return undefined;\r\n    }).filter((equi) => equi) as MissileWeaponsEntity[];\r\n    const misc = uniqueEquipment.map((equi) => {\r\n        const foundEquipment = AllMiscallaneous.find((equipment) => equipment.type === equi.trim());\r\n        if (foundEquipment) {\r\n            return foundEquipment;\r\n        }\r\n        return undefined;\r\n    }).filter((equi) => equi) as MiscallaneousEntity[];\r\n    return [...foundArmour, ...melee, ...missile, ...misc];\r\n};\r\n\r\nexport const getEquipmentRules = (rules: string[]): EquipmentRulesEntity[] => {\r\n    const mappedRules = rules.map((ruleString) => EquipmentRules.rules.find((rule) => rule.name === ruleString));\r\n    return mappedRules.filter((entry) => entry) as EquipmentRulesEntity[];\r\n};\r\n","export interface WarbandState {\r\n    warband: string;\r\n    campaign: number;\r\n    gc: number;\r\n    shards: number;\r\n    objective: string;\r\n    alignment: string;\r\n    heros?: HerosEntity[];\r\n    henchmen?: HenchmenEntity[];\r\n    notes?: string;\r\n}\r\n\r\nexport interface HerosEntity {\r\n    hero: string;\r\n    stats: string;\r\n    weapons: string;\r\n    armour?: string;\r\n    rules?: string;\r\n    skilllists: string;\r\n}\r\n\r\nexport interface HenchmenEntity {\r\n    group: string;\r\n    stats: string;\r\n    weapons?: string;\r\n    armour?: string;\r\n    rules?: string;\r\n}\r\n\r\nexport interface Stats {\r\n    M: string;\r\n    WS: string;\r\n    BS: string;\r\n    S: string;\r\n    T: string;\r\n    W: string;\r\n    I: string;\r\n    A: string;\r\n    LD: string;\r\n    Sv: string;\r\n}\r\n\r\nexport interface SkillsEntity {\r\n    name: string;\r\n    type: string;\r\n    text: string;\r\n    prerequisite?: Prerequisite;\r\n}\r\n\r\nexport interface Prerequisite {\r\n    type: string;\r\n    condition: number | string;\r\n    lookup?: string;\r\n}\r\n\r\nexport interface SpellsEntity {\r\n    name: string;\r\n    type: string;\r\n    castingCost: string;\r\n    text: string;\r\n}\r\n\r\nexport interface EquipmentEntity {\r\n    MeleeWeapons?: MeleeWeaponsEntity[];\r\n    MissileWeapons?: MissileWeaponsEntity[];\r\n    Armour?: ArmourEntity[];\r\n    Miscallaneous?: MiscallaneousEntity[];\r\n}\r\nexport interface MeleeWeaponsEntity {\r\n    type: string;\r\n    cost: number;\r\n    rarity: number;\r\n    weaponType: string;\r\n    rules?: string[];\r\n    strengthModifier: string;\r\n}\r\nexport interface MissileWeaponsEntity {\r\n    type: string;\r\n    cost: number;\r\n    rarity: number;\r\n    weaponType: string;\r\n    rules?: string[];\r\n    strength: number | string;\r\n    range: number;\r\n    variableCost?: string;\r\n}\r\nexport interface ArmourEntity {\r\n    type: string;\r\n    cost: number;\r\n    rarity: number;\r\n    armourType: string;\r\n    rules?: string[];\r\n    armour: number;\r\n    variableCost?: string;\r\n}\r\nexport interface MiscallaneousEntity {\r\n    type: string;\r\n    cost: number;\r\n    variableCost?: string;\r\n    rarity: number;\r\n    genus: string;\r\n    rules?: string[];\r\n    text?: string;\r\n}\r\n\r\nexport interface EquipmentRulesEntity {\r\n    name: string;\r\n    text: string;\r\n}\r\n\r\n// Type guards\r\nexport const isHero = (unit: HenchmenEntity | HerosEntity): unit is HerosEntity => (unit as HerosEntity).hero !== undefined;\r\nexport const isSpell = (skillOrSpell: SkillsEntity | SpellsEntity): skillOrSpell is SpellsEntity => (skillOrSpell as SpellsEntity).castingCost !== undefined;\r\nexport const isArmour = (equipment: ArmourEntity | MiscallaneousEntity | MissileWeaponsEntity | MeleeWeaponsEntity): equipment is ArmourEntity => (equipment as ArmourEntity).armourType !== undefined;\r\nexport const isMisc = (equipment: ArmourEntity | MiscallaneousEntity | MissileWeaponsEntity | MeleeWeaponsEntity): equipment is MiscallaneousEntity => (equipment as MiscallaneousEntity).genus !== undefined;\r\nexport const isMelee = (equipment: ArmourEntity | MiscallaneousEntity | MissileWeaponsEntity | MeleeWeaponsEntity): equipment is MeleeWeaponsEntity => (equipment as MeleeWeaponsEntity).strengthModifier !== undefined;\r\nexport const isMissile = (equipment: ArmourEntity | MiscallaneousEntity | MissileWeaponsEntity | MeleeWeaponsEntity): equipment is MissileWeaponsEntity => (equipment as MissileWeaponsEntity).range !== undefined;\r\n","import { MiddenheimPng, NurglePng, OnGPng, SigmarPng } from \"../images\";\r\nimport { HenchmenEntity, HerosEntity, isHero, Stats } from \"./Interfaces\";\r\n\r\nexport const extractExperience = (hero: HerosEntity): number => {\r\n    const nameAndXp = hero.hero;\r\n    const bracketStart = nameAndXp.lastIndexOf(\"[\");\r\n    const bracketEnd = nameAndXp.lastIndexOf(\"]\");\r\n    return parseInt(nameAndXp.substring(bracketStart + 1, bracketEnd), 10);\r\n};\r\n\r\nexport const getNextLevelUp = (currentXp: number): number => {\r\n    switch (currentXp) {\r\n        case 0:\r\n        case 1: return 2;\r\n        case 2:\r\n        case 3: return 4;\r\n        case 4:\r\n        case 5: return 6;\r\n        case 6:\r\n        case 7: return 8;\r\n        case 8:\r\n        case 9:\r\n        case 10: return 11;\r\n        case 11:\r\n        case 12:\r\n        case 13: return 14;\r\n        case 14:\r\n        case 15:\r\n        case 16: return 17;\r\n        case 17:\r\n        case 18:\r\n        case 19: return 20;\r\n        case 20:\r\n        case 21:\r\n        case 22:\r\n        case 23: return 24;\r\n        case 24:\r\n        case 25:\r\n        case 26:\r\n        case 27: return 28;\r\n        case 28:\r\n        case 29:\r\n        case 30:\r\n        case 31: return 32;\r\n        case 32:\r\n        case 33:\r\n        case 34:\r\n        case 35: return 36;\r\n        case 36:\r\n        case 37:\r\n        case 38:\r\n        case 39:\r\n        case 40: return 41;\r\n        default: return 0;\r\n    }\r\n};\r\n\r\nexport const extractName = (unit: HerosEntity | HenchmenEntity): string => {\r\n    const nameAndXp = isHero(unit) ? unit.hero : unit.group;\r\n    const classStart = nameAndXp.lastIndexOf(\"(\");\r\n    return nameAndXp.substring(0, classStart);\r\n};\r\n\r\nexport const extractClass = (unit: HerosEntity | HenchmenEntity): string => {\r\n    const nameAndXp = isHero(unit) ? unit.hero : unit.group;\r\n    const classStart = nameAndXp.lastIndexOf(\"(\");\r\n    const classEnd = nameAndXp.lastIndexOf(\")\");\r\n    return nameAndXp.substring(classStart + 1, classEnd);\r\n};\r\n\r\nexport const extractHenchmenBodies = (henchmen: HenchmenEntity): number => {\r\n    const nameAndXp = henchmen.group;\r\n    const bracketStart = nameAndXp.lastIndexOf(\"(\");\r\n    const numberEnd = isNaN(parseInt(nameAndXp.charAt(bracketStart + 2), 10)) ? bracketStart + 2 : bracketStart + 3;\r\n    const bodyCount = parseInt(nameAndXp.substring(bracketStart + 1, numberEnd), 10);\r\n    return bodyCount;\r\n};\r\n\r\nexport const isLargeHenchman = (henchmanGroup: HenchmenEntity): boolean => {\r\n    const rules = henchmanGroup.rules;\r\n    if (rules) {\r\n        return rules.indexOf(\"Large\") !== -1;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const getWarbandRating = (heroes: HerosEntity[], henchmen: HenchmenEntity[]): number => {\r\n    const experience = heroes.reduce((prev, curr) => prev + extractExperience(curr), 0) || 0;\r\n    const heroBodies = heroes.length * 5;\r\n    const henchmenBodies = henchmen.reduce((prev, curr) => prev + extractHenchmenBodies(curr) + (isLargeHenchman(curr) ? 3 : 0), 0) * 5;\r\n    return experience + heroBodies + henchmenBodies;\r\n};\r\n\r\nconst getWarbandSize = (heroes: HerosEntity[], henchmen: HenchmenEntity[]): number => heroes.length + henchmen.reduce((prev, curr) => prev + extractHenchmenBodies(curr), 0);\r\nexport const getRoutLimit = (heroes: HerosEntity[], henchmen: HenchmenEntity[]): number => Math.ceil(getWarbandSize(heroes, henchmen) / 4);\r\n\r\nexport const getStatLine = (statString: string): Stats => {\r\n    const statArr = statString.split(\",\").map((subString) => subString.replace(/^\\D+/g, \"\"));\r\n    return {\r\n        M: statArr[0],\r\n        WS: statArr[1],\r\n        BS: statArr[2],\r\n        S: statArr[3],\r\n        T: statArr[4],\r\n        W: statArr[5],\r\n        I: statArr[6],\r\n        A: statArr[7],\r\n        LD: statArr[8],\r\n        Sv: statString.substring(statString.indexOf(\"Sv\") + 2),\r\n    };\r\n};\r\n\r\nexport const getWatermark = (warbandName: string) => {\r\n    const warbandType = warbandName.substring(warbandName.lastIndexOf(\"(\") + 1, warbandName.lastIndexOf(\")\"));\r\n    switch (warbandType) {\r\n        case \"Orcs & Goblins\": return OnGPng;\r\n        case \"Sisters of Sigmar\": return SigmarPng;\r\n        case \"Carnival of Chaos\": return NurglePng;\r\n        case \"Mercenaries of Middenheim\": return MiddenheimPng;\r\n        default: return \"\";\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { HenchmenEntity, HerosEntity } from \"../utilities/Interfaces\";\r\n\r\nexport const RulesSection = ({ Unit }: { Unit: HerosEntity | HenchmenEntity }) => {\r\n    const rules = Unit.rules;\r\n    return rules ? <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div className=\"bold-text-with-margins\">Rules: </div>\r\n        <div className=\"text-with-margins\">{rules}</div>\r\n    </div> : <React.Fragment />;\r\n};\r\n","import React from \"react\";\r\nimport { HenchmenEntity, HerosEntity } from \"../utilities/Interfaces\";\r\nimport { getStatLine } from \"../utilities/RosterUtils\";\r\n\r\nexport const StatsAndEquipmentSection = ({ Unit }: { Unit: HerosEntity | HenchmenEntity }) => {\r\n    const statLine = getStatLine(Unit.stats);\r\n    const WeaponsPart = () => {\r\n        const weapons = Unit.weapons;\r\n        return weapons ? <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <div className=\"bold-text-with-margins\">Weapons: </div>\r\n            <div className=\"text-with-margins\">{weapons}</div>\r\n        </div> : <React.Fragment />;\r\n    };\r\n    const ArmourPart = () => {\r\n        const armour = Unit.armour;\r\n        return armour ? <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <div className=\"bold-text-with-margins\">Armour:</div>\r\n            <div className=\"text-with-margins\">{armour}</div>\r\n        </div> : <React.Fragment />;\r\n    };\r\n\r\n    return <div className=\"unit-layout\" style={{ borderTop: \"0.1rem solid\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <div style={{ display: \"flex\" }}>\r\n                {Object.entries(statLine).map(([key, value]) =>\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                        <div className=\"bold-text-with-margins\">{key}</div>\r\n                        <div className=\"text-with-margins\" style={{ textAlign: \"center\" }}>{value}</div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n        <WeaponsPart />\r\n        <ArmourPart />\r\n    </div >;\r\n};\r\n","import { HenchmenEntity, HerosEntity, isHero } from \"../utilities/Interfaces\";\r\nimport { extractClass, extractExperience, extractName, getNextLevelUp } from \"../utilities/RosterUtils\";\r\n\r\nexport const UnitHeader = ({ Unit }: { Unit: HerosEntity | HenchmenEntity }) =>\r\n    <div className=\"unit-layout\">\r\n        <div style={{ display: \"flex\" }}>\r\n            <div className=\"bold-text-with-margins\">Name: </div>\r\n            <div className=\"text-with-margins\">{extractName(Unit)}</div>\r\n        </div>\r\n        <div style={{ display: \"flex\" }}>\r\n            <div className=\"bold-text-with-margins\">Type: </div>\r\n            <div className=\"text-with-margins\">{extractClass(Unit)}</div>\r\n        </div>\r\n        {isHero(Unit) ? <div style={{ display: \"flex\" }}>\r\n            <div className=\"bold-text-with-margins\">Experience: </div>\r\n            <div className=\"text-with-margins\">{`${extractExperience(Unit)} [ +${getNextLevelUp(extractExperience(Unit)) - extractExperience(Unit)} ]`}</div>\r\n        </div> : <div></div>}\r\n    </div>;\r\n","import { WarbandState } from \"../utilities/Interfaces\";\r\nimport { getRoutLimit, getWarbandRating } from \"../utilities/RosterUtils\";\r\n\r\nexport const WarbandHeader = ({ warband }: { warband: WarbandState }) =>\r\n    <div className=\"unit-container\" >\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", fontSize: \"1rem\" }}>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Warband Name: </div>\r\n                <div className=\"bold-text-with-margins\">{warband.warband}</div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Warband Rating: </div>\r\n                <div className=\"bold-text-with-margins\">{getWarbandRating(warband.heros || [], warband.henchmen || [])}</div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Rout Limit: </div>\r\n                <div className=\"bold-text-with-margins\">{getRoutLimit(warband.heros || [], warband.henchmen || [])}</div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Gold Coins: </div>\r\n                <div className=\"bold-text-with-margins\">{warband.gc}</div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Shards: </div>\r\n                <div className=\"bold-text-with-margins\">{warband.shards}</div>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n","import React from \"react\";\r\nimport { findEquipment, findSkills, getEquipmentRules } from \"../utilities/InfoUtils\";\r\nimport { ArmourEntity, HerosEntity, isArmour, isMelee, isMisc, isMissile, isSpell, MeleeWeaponsEntity, MiscallaneousEntity, MissileWeaponsEntity, SkillsEntity, SpellsEntity, WarbandState } from \"../utilities/Interfaces\";\r\nimport { getWatermark } from \"../utilities/RosterUtils\";\r\nimport { RulesSection } from \"./RulesSection\";\r\nimport { StatsAndEquipmentSection } from \"./StatsAndEquipmentSection\";\r\nimport { UnitHeader } from \"./UnitHeader\";\r\nimport { WarbandHeader } from \"./WarbandHeader\";\r\n\r\nexport const PdfInfoPage = ({ state }: { state: WarbandState }) => {\r\n    const heroes = state.heros || [];\r\n    const henchmen = state.henchmen || [];\r\n    const units = [...heroes, ...henchmen];\r\n    const spells = findSkills(units).filter((entity) => entity && isSpell(entity)) as SpellsEntity[];\r\n    const skills = findSkills(units).filter((entity) => entity && !isSpell(entity)) as SkillsEntity[];\r\n    const equipment = findEquipment(units);\r\n    if (spells.length + skills.length + equipment.length > 15) {\r\n        return <React.Fragment>\r\n            <div className=\"pdf-container\" id=\"pdf-info-page\" style={{ top: \"-10000px\" }}>\r\n                <img src={getWatermark(state.warband)} className=\"pdf-watermark\"></img>\r\n                <WarbandHeader warband={state} />\r\n                <div className=\"unit-container\" style={{ minHeight: \"50%\" }}>\r\n                    <NotesSection notes={state.notes} />\r\n                    <SkillsSection skills={skills} />\r\n                </div>\r\n            </div>\r\n            <div className=\"pdf-container\" id=\"pdf-info-page2\" style={{ top: \"-10000px\" }}>\r\n                <img src={getWatermark(state.warband)} className=\"pdf-watermark\"></img>\r\n                <WarbandHeader warband={state} />\r\n                <div className=\"unit-container\" style={{ minHeight: \"50%\" }}>\r\n                    <SpellsSection spells={spells} />\r\n                    <EquipmentSection equipment={equipment} />\r\n                </div>\r\n            </div>\r\n        </React.Fragment>;\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"pdf-container\" id=\"pdf-info-page\" style={{ top: \"-10000px\" }}>\r\n            <img src={getWatermark(state.warband)} className=\"pdf-watermark\"></img>\r\n            <WarbandHeader warband={state} />\r\n            <div className=\"unit-container\" style={{ minHeight: \"50%\" }}>\r\n                <NotesSection notes={state.notes} />\r\n                <SkillsSection skills={skills} />\r\n                <SpellsSection spells={spells} />\r\n                <EquipmentSection equipment={equipment} />\r\n            </div>\r\n        </div>\r\n    </React.Fragment>;\r\n\r\n};\r\n\r\nconst NotesSection = ({ notes }: { notes: string | HerosEntity[] | undefined }) => {\r\n    if (!notes) {\r\n        return null;\r\n    }\r\n    if (typeof notes === \"string\") {\r\n        return <React.Fragment>\r\n            <div className=\"large-header\">Notes</div>\r\n            <div className=\"text-with-margins\">{notes}</div>\r\n        </React.Fragment>;\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"large-header\">Notes</div>\r\n        {notes.map((note) => <React.Fragment>\r\n            <UnitHeader Unit={note} />\r\n            <StatsAndEquipmentSection Unit={note} />\r\n            <RulesSection Unit={note} />\r\n        </React.Fragment>)}\r\n    </React.Fragment>;\r\n};\r\n\r\nconst SkillsSection = ({ skills }: { skills: SkillsEntity[] }) => <React.Fragment>\r\n    {skills.length > 0 ? <div className=\"large-header\">Skills and other Rules</div> : undefined}\r\n    {skills.map((entity) => <div className=\"info-page-flexbox\">\r\n        <div className=\"bold-text-with-margins\">{entity.type === \"Generic\" ? `${entity.name}` : `${entity.name} (${entity.type})`}</div>\r\n        <div className=\"text-with-margins\">{entity.text}</div>\r\n    </div>)}\r\n</React.Fragment>;\r\n\r\nconst SpellsSection = ({ spells }: { spells: SpellsEntity[] }) => <React.Fragment>\r\n    {spells.length > 0 ? <div className=\"large-header\">Spells</div> : undefined}\r\n    {spells.map((entity) => <div className=\"info-page-flexbox\">\r\n        <div className=\"bold-text-with-margins\">{`${entity.name} (${entity.type}) [${entity.castingCost}]`}</div>\r\n        <div className=\"text-with-margins\">{entity.text}</div>\r\n    </div>)}\r\n</React.Fragment>;\r\n\r\nconst EquipmentSection = ({ equipment }: { equipment: Array<MeleeWeaponsEntity | MissileWeaponsEntity | ArmourEntity | MiscallaneousEntity> }) => <React.Fragment>\r\n    {equipment.length > 0 ? <div className=\"large-header\">Equipment</div> : undefined}\r\n    {equipment.map((entity) => {\r\n        if (isArmour(entity)) {\r\n            return <div className=\"info-page-flexbox\">\r\n                <div className=\"bold-text-with-margins\">{`${entity.type}`}</div>\r\n                <div className=\"text-with-margins\"><div>{`Add +${entity.armour} to your armour save.`}</div>{getEquipmentRules(entity.rules || []).map((rule) => <div>{rule.text}</div>)}</div>\r\n            </div>;\r\n        }\r\n        if (isMelee(entity)) {\r\n            return <div className=\"info-page-flexbox\">\r\n                <div className=\"bold-text-with-margins\">{`${entity.type} (Strength ${entity.strengthModifier || \"+0\"})`}</div>\r\n                <div className=\"text-with-margins\">{getEquipmentRules(entity.rules || []).map((rule) => <div>{rule.text}</div>)}</div>\r\n            </div>;\r\n        }\r\n        if (isMisc(entity)) {\r\n            return <div className=\"info-page-flexbox\">\r\n                <div className=\"bold-text-with-margins\">{`${entity.type}`}</div>\r\n                {entity.rules ? <div className=\"text-with-margins\">{getEquipmentRules(entity.rules).map((rule) => <div>{rule.text}</div>)}</div> : <div className=\"text-with-margins\">{entity.text}</div>}\r\n            </div>;\r\n        }\r\n        if (isMissile(entity)) {\r\n            return <div className=\"info-page-flexbox\">\r\n                <div className=\"bold-text-with-margins\">{`${entity.type} (Strength ${entity.strength}, Range ${entity.range})`}</div>\r\n                <div className=\"text-with-margins\">{getEquipmentRules(entity.rules || []).map((rule) => <div>{rule.text}</div>)}</div>\r\n            </div>;\r\n        }\r\n        return undefined;\r\n    }\r\n    )}\r\n</React.Fragment>;\r\n","import React from \"react\";\r\nimport { WarbandState } from \"../utilities/Interfaces\";\r\nimport { getWatermark } from \"../utilities/RosterUtils\";\r\nimport { RulesSection } from \"./RulesSection\";\r\nimport { StatsAndEquipmentSection } from \"./StatsAndEquipmentSection\";\r\nimport { UnitHeader } from \"./UnitHeader\";\r\nimport { WarbandHeader } from \"./WarbandHeader\";\r\n\r\nexport const PdfRoster = ({ state }: { state: WarbandState }) => {\r\n    const heroes = state.heros || [];\r\n    const henchmen = state.henchmen || [];\r\n    const units = [...heroes, ...henchmen];\r\n    return <React.Fragment>\r\n        <div className=\"pdf-container\" style={{ top: \"-10000px\" }} id=\"pdf-roster\">\r\n            <img src={getWatermark(state.warband)} className=\"pdf-watermark\"></img>\r\n            <WarbandHeader warband={state} />\r\n            {units.map((unit) =>\r\n                <div className=\"unit-container\">\r\n\r\n                    <UnitHeader Unit={unit} />\r\n                    <StatsAndEquipmentSection Unit={unit} />\r\n                    <RulesSection Unit={unit} />\r\n                </div>)}\r\n            <div style={{ marginLeft: \"1rem\" }}>* the [ +* ] notation behind the experience states how many xp you need to gain the next advance</div>\r\n        </div>\r\n\r\n    </React.Fragment>;\r\n};\r\n","import React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"./css/App.css\";\r\nimport { LandingPage, PdfCreationPage } from \"./pages\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <div className=\"app-body\">\r\n        <Switch>\r\n          <Route path=\"/PdfExport\" component={PdfCreationPage} />\r\n          <Route path=\"/\" component={LandingPage} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","\r\nimport html2canvas from \"html2canvas\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PdfInfoPage, PdfRoster } from \"../components\";\r\nimport \"../css/Pdf.css\";\r\nimport { CompletedPng, LoadingPng } from \"../images\";\r\nimport { WarbandState } from \"../utilities/Interfaces\";\r\n\r\nexport const PdfCreationPage = () => {\r\n    const history = useHistory();\r\n    const state = history.location.state as WarbandState;\r\n    const exportPdf = async () => {\r\n        const jsPdf = new jsPDF(\"portrait\", \"mm\", \"a4\", true);\r\n        let canvas: HTMLCanvasElement;\r\n        canvas = await html2canvas(document.querySelector(\"#pdf-roster\") as HTMLElement, { scale: 4 });\r\n        jsPdf.addImage(canvas.toDataURL(\"image/png\"), \"JPEG\", 0, 0, jsPdf.internal.pageSize.getWidth(), jsPdf.internal.pageSize.getHeight());\r\n\r\n        jsPdf.addPage();\r\n        canvas = await html2canvas(document.querySelector(\"#pdf-info-page\") as HTMLElement, { scale: 4 });\r\n        jsPdf.addImage(canvas.toDataURL(\"image/png\"), \"JPEG\", 0, 0, jsPdf.internal.pageSize.getWidth(), jsPdf.internal.pageSize.getHeight());\r\n        if (document.querySelector(\"#pdf-info-page2\")) {\r\n            jsPdf.addPage();\r\n            canvas = await html2canvas(document.querySelector(\"#pdf-info-page2\") as HTMLElement, { scale: 4 });\r\n            jsPdf.addImage(canvas.toDataURL(\"image/png\"), \"JPEG\", 0, 0, jsPdf.internal.pageSize.getWidth(), jsPdf.internal.pageSize.getHeight());\r\n        }\r\n        jsPdf.save(`${state.warband}.pdf`);\r\n    };\r\n    const [showSuccess, setSuccess] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        // tslint:disable-next-line: no-floating-promises\r\n        (async () => {\r\n            await exportPdf();\r\n            setSuccess(true);\r\n        })();\r\n        return () => {\r\n            // this now gets called when the component unmounts\r\n        };\r\n    }, []);\r\n    return <React.Fragment>\r\n        {showSuccess ?\r\n            <React.Fragment>\r\n                <img src={CompletedPng} className=\"img-container\" alt=\"Complete Icon\"></img>\r\n                <div className=\"large-header\">Enjoy your pdf</div>\r\n                <div\r\n                    className=\"back-btn\"\r\n                    onClick={() => history.goBack()}\r\n                >Back</div>\r\n            </React.Fragment> :\r\n            <React.Fragment>\r\n                <img src={LoadingPng} className=\"img-container\" alt=\"Loading Icon\"></img>\r\n                <div className=\"large-header\">Please be patient. </div>\r\n                <div className=\"large-header\">The Snotlings are painting your pdf right now.</div>\r\n                <div className=\"large-header\">They are almost done.</div>\r\n                <div className=\"large-header\">Hang on...</div>\r\n            </React.Fragment>\r\n        }\r\n        <PdfRoster state={state} />\r\n        <PdfInfoPage state={state} />\r\n    </React.Fragment>;\r\n};\r\n","import * as yaml from \"js-yaml\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GithubFilePicker } from \"../components/GithubFilePicker\";\r\nimport { ImportWarbandPng } from \"./../images\";\r\nexport const LandingPage = () => {\r\n    const history = useHistory();\r\n\r\n    return <div className=\"flex-container\" style={{ textAlign: \"center\" }}>\r\n        <label htmlFor=\"file-uploader\" className=\"flex-container\" style={{ display: \"unset\" }}>\r\n            <input\r\n                id=\"file-uploader\"\r\n                type=\"file\"\r\n                accept=\".yml\"\r\n                style={{ display: \"none\" }}\r\n                onChange={() => {\r\n                    const reader = new FileReader();\r\n                    reader.onload = (ev: ProgressEvent<FileReader>) => {\r\n                        const jsobject = yaml.load(ev.target?.result as string);\r\n                        history.push(\"/PdfExport\", jsobject);\r\n                    };\r\n                    reader.readAsText((document.querySelector(\"#file-uploader\") as HTMLInputElement)?.files?.item(0) as File);\r\n                }}\r\n            />\r\n            <img style={{ width: \"25%\", maxWidth: \"1000px\" }} src={ImportWarbandPng} alt=\"Import Icon\"></img>\r\n            <div style={{ padding: \"0.7rem 0.5rem 0.7rem 0rem\", fontWeight: \"bold\", borderBottom: \"1px solid black\" }} onClick={() => document.getElementById(\"file-uploader\")?.click()}>Tap here to select a local .yml file</div>\r\n        </label>\r\n        <GithubFilePicker />\r\n    </div>;\r\n};\r\n"],"sourceRoot":""}